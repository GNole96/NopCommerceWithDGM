<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="8" passed="4" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-12-14T15:02:04 IST" name="Suite" finished-at="2022-12-14T15:10:19 IST" duration-ms="495012">
    <groups>
    </groups>
    <test started-at="2022-12-14T15:02:04 IST" name="Test" finished-at="2022-12-14T15:10:19 IST" duration-ms="495012">
      <class name="test.TestLogInRegisteredUser">
        <test-method is-config="true" signature="testConfiguration(java.lang.String)[pri:0, instance:test.TestLogInRegisteredUser@73e9cf30]" started-at="2022-12-14T15:02:04 IST" name="testConfiguration" finished-at="2022-12-14T15:02:04 IST" duration-ms="581" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[LogInRegTest01]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfiguration -->
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:test.TestLogInRegisteredUser@73e9cf30]" started-at="2022-12-14T15:04:13 IST" name="openBrowser" finished-at="2022-12-14T15:04:35 IST" duration-ms="21545" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="logInWithRegCredGaurav()[pri:0, instance:test.TestLogInRegisteredUser@73e9cf30]" started-at="2022-12-14T15:04:35 IST" name="logInWithRegCredGaurav" finished-at="2022-12-14T15:04:50 IST" duration-ms="15069" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInWithRegCredGaurav -->
        <test-method is-config="true" signature="listenersClass(org.testng.ITestResult)[pri:0, instance:test.TestLogInRegisteredUser@73e9cf30]" started-at="2022-12-14T15:04:50 IST" name="listenersClass" finished-at="2022-12-14T15:04:50 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logInWithRegCredGaurav status=SUCCESS method=TestLogInRegisteredUser.logInWithRegCredGaurav()[pri:0, instance:test.TestLogInRegisteredUser@73e9cf30] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listenersClass -->
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:test.TestLogInRegisteredUser@73e9cf30]" started-at="2022-12-14T15:04:50 IST" name="openBrowser" finished-at="2022-12-14T15:07:52 IST" duration-ms="182307" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="logInWithRegDeepak()[pri:0, instance:test.TestLogInRegisteredUser@73e9cf30]" started-at="2022-12-14T15:07:52 IST" name="logInWithRegDeepak" finished-at="2022-12-14T15:08:23 IST" duration-ms="30607" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://demo.nopcommerce.com/] but found [https://demo.nopcommerce.com/login?returnurl=%2F]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://demo.nopcommerce.com/] but found [https://demo.nopcommerce.com/login?returnurl=%2F]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at test.TestLogInRegisteredUser.logInWithRegDeepak(TestLogInRegisteredUser.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInWithRegDeepak -->
        <test-method is-config="true" signature="listenersClass(org.testng.ITestResult)[pri:0, instance:test.TestLogInRegisteredUser@73e9cf30]" started-at="2022-12-14T15:08:25 IST" name="listenersClass" finished-at="2022-12-14T15:08:25 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logInWithRegDeepak status=FAILURE method=TestLogInRegisteredUser.logInWithRegDeepak()[pri:0, instance:test.TestLogInRegisteredUser@73e9cf30] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listenersClass -->
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:test.TestLogInRegisteredUser@73e9cf30]" started-at="2022-12-14T15:08:25 IST" name="openBrowser" finished-at="2022-12-14T15:09:43 IST" duration-ms="78091" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="logInWithRegMadhu()[pri:0, instance:test.TestLogInRegisteredUser@73e9cf30]" started-at="2022-12-14T15:09:43 IST" name="logInWithRegMadhu" finished-at="2022-12-14T15:10:08 IST" duration-ms="25470" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://demo.nopcommerce.com/] but found [https://demo.nopcommerce.com/login?returnurl=%2F]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://demo.nopcommerce.com/] but found [https://demo.nopcommerce.com/login?returnurl=%2F]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at test.TestLogInRegisteredUser.logInWithRegMadhu(TestLogInRegisteredUser.java:55)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInWithRegMadhu -->
        <test-method is-config="true" signature="listenersClass(org.testng.ITestResult)[pri:0, instance:test.TestLogInRegisteredUser@73e9cf30]" started-at="2022-12-14T15:10:10 IST" name="listenersClass" finished-at="2022-12-14T15:10:10 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logInWithRegMadhu status=FAILURE method=TestLogInRegisteredUser.logInWithRegMadhu()[pri:0, instance:test.TestLogInRegisteredUser@73e9cf30] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listenersClass -->
        <test-method is-config="true" signature="clearData()[pri:0, instance:test.TestLogInRegisteredUser@73e9cf30]" started-at="2022-12-14T15:10:10 IST" name="clearData" finished-at="2022-12-14T15:10:17 IST" duration-ms="6446" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearData -->
      </class> <!-- test.TestLogInRegisteredUser -->
      <class name="test.TestRegistrationPage">
        <test-method is-config="true" signature="testConfiguration(java.lang.String)[pri:0, instance:test.TestRegistrationPage@b9b00e0]" started-at="2022-12-14T15:02:04 IST" name="testConfiguration" finished-at="2022-12-14T15:02:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RegTest01]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfiguration -->
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:test.TestRegistrationPage@b9b00e0]" started-at="2022-12-14T15:02:04 IST" name="openBrowser" finished-at="2022-12-14T15:02:58 IST" duration-ms="53986" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="registerNewFemaleUser()[pri:3, instance:test.TestRegistrationPage@b9b00e0]" started-at="2022-12-14T15:02:58 IST" name="registerNewFemaleUser" finished-at="2022-12-14T15:03:10 IST" duration-ms="11284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerNewFemaleUser -->
        <test-method is-config="true" signature="listenersClass(org.testng.ITestResult)[pri:0, instance:test.TestRegistrationPage@b9b00e0]" started-at="2022-12-14T15:03:10 IST" name="listenersClass" finished-at="2022-12-14T15:03:10 IST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerNewFemaleUser status=SUCCESS method=TestRegistrationPage.registerNewFemaleUser()[pri:3, instance:test.TestRegistrationPage@b9b00e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listenersClass -->
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:test.TestRegistrationPage@b9b00e0]" started-at="2022-12-14T15:03:10 IST" name="openBrowser" finished-at="2022-12-14T15:03:25 IST" duration-ms="15141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="registerNewMaleUser()[pri:4, instance:test.TestRegistrationPage@b9b00e0]" started-at="2022-12-14T15:03:25 IST" name="registerNewMaleUser" finished-at="2022-12-14T15:03:39 IST" duration-ms="14079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerNewMaleUser -->
        <test-method is-config="true" signature="listenersClass(org.testng.ITestResult)[pri:0, instance:test.TestRegistrationPage@b9b00e0]" started-at="2022-12-14T15:03:39 IST" name="listenersClass" finished-at="2022-12-14T15:03:39 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerNewMaleUser status=SUCCESS method=TestRegistrationPage.registerNewMaleUser()[pri:4, instance:test.TestRegistrationPage@b9b00e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listenersClass -->
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:test.TestRegistrationPage@b9b00e0]" started-at="2022-12-14T15:03:39 IST" name="openBrowser" finished-at="2022-12-14T15:03:58 IST" duration-ms="18914" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="registerNewUser()[pri:5, instance:test.TestRegistrationPage@b9b00e0]" started-at="2022-12-14T15:03:58 IST" name="registerNewUser" finished-at="2022-12-14T15:04:13 IST" duration-ms="15488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerNewUser -->
        <test-method is-config="true" signature="listenersClass(org.testng.ITestResult)[pri:0, instance:test.TestRegistrationPage@b9b00e0]" started-at="2022-12-14T15:04:13 IST" name="listenersClass" finished-at="2022-12-14T15:04:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerNewUser status=SUCCESS method=TestRegistrationPage.registerNewUser()[pri:5, instance:test.TestRegistrationPage@b9b00e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listenersClass -->
        <test-method is-config="true" signature="clearData()[pri:0, instance:test.TestRegistrationPage@b9b00e0]" started-at="2022-12-14T15:10:17 IST" name="clearData" finished-at="2022-12-14T15:10:19 IST" duration-ms="1868" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearData -->
      </class> <!-- test.TestRegistrationPage -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
